buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.22.3'
        classpath 'org.mariadb.jdbc:mariadb-java-client:3.5.3'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'java-library'
    id 'application'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.codeflix.admin.catalog.infrastructure'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.layout.buildDirectory.get()}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation("com.google.cloud:google-cloud-storage:2.52.3")
    implementation("com.google.guava:guava:31.1-jre")

    implementation('mysql:mysql-connector-java:8.0.33')

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8")

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-start-tomcat'
    }

    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testImplementation("net.datafaker:datafaker:2.4.2")
    testImplementation('org.testcontainers:testcontainers')
    testImplementation('org.testcontainers:mysql')
    testImplementation('org.testcontainers:junit-jupiter')

    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')
    testImplementation("org.springframework.amqp:spring-rabbit-test:2.4.17")
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv("FLYWAY_DB") ?: 'jdbc:mysql://localhost:3306/catalog_adm'
    user = System.getenv("FLYWAY_USER") ?: 'root'
    password = System.getenv("FLYWAY_PASS") ?: '123456'
    cleanDisabled = false
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}